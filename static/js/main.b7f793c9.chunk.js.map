{"version":3,"sources":["reducer/index.js","servise/storage.js","store.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","action/index.js","components/todo-list/index.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/app/app.js","components/app/index.js","index.js"],"names":["initialState","todoData","filterPrope","term","shownData","Service","key","localStorage","getItem","this","JSON","parse","setItem","stringify","newArray","toggleProperty","arr","id","propName","idx","findIndex","el","oldItem","newItem","slice","Filter","items","filter","done","search","length","item","label","toLowerCase","indexOf","reducer","state","action","type","getTodoList","payload","important","Date","now","updateData","store","createStore","TodoListItem","props","onDelete","onToggleDone","onToggleImportant","className","onClick","mapDispatchToProps","onDeletingItem","TodoList","connect","todo","element","map","itemProps","AppHeader","toDo","SearchPanel","onChanging","event","text","target","value","onSearch","onChange","placeholder","Component","onAdd","lable","ItemAddForm","useState","onLabelChange","onSubmit","e","preventDefault","labelCopy","trim","ItemStatusFilter","buttons","name","clazz","setFilter","App","onAppSuccess","doneCount","todoCount","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f793c9.chunk.js","sourcesContent":["import StorageLoader from \"../servise/storage\";\r\n\r\nconst initialState = {\r\n    todoData: [],\r\n    filterPrope: \"all\",\r\n    term: \"\",\r\n    shownData: []\r\n};\r\n\r\nconst Service = new StorageLoader();\r\n\r\nconst toggleProperty = (arr, id, propName) => {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n};\r\n\r\nconst Filter = (items, filter) => {\r\n    switch (filter) {\r\n        case \"all\":\r\n            return items;\r\n        case \"active\":\r\n            return items.filter((el) => !el.done);\r\n        case \"done\":\r\n            return items.filter((el) => el.done);\r\n        default:\r\n            return items;\r\n    }\r\n};\r\n\r\nconst search = (items, term) => {\r\n    if (term.length === 0) {\r\n        return items;\r\n    }\r\n    return items.filter((item) => {\r\n        return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"COMPONENT_SUCCESS\": {\r\n            const todoData = Service.getTodoList();\r\n            return {\r\n                ...state,\r\n                todoData,\r\n                shownData: todoData\r\n            };\r\n        }\r\n\r\n        case \"ADDING_ITEM\": {\r\n            const newItem = {\r\n                label: action.payload,\r\n                important: false,\r\n                done: false,\r\n                id: Date.now()\r\n            };\r\n            const newArray = [...state.todoData, newItem];\r\n            Service.updateData(newArray);\r\n\r\n            return {\r\n                ...state,\r\n                todoData: newArray,\r\n                shownData: newArray\r\n            };\r\n        }\r\n\r\n        case \"DELITING_ITEM\": {\r\n            const { todoData } = state;\r\n            const id = action.payload;\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n            Service.updateData(newArray);\r\n            return {\r\n                ...state,\r\n                todoData: newArray,\r\n                shownData: newArray\r\n            };\r\n        }\r\n\r\n        case \"TOGGLE_IMPOTENT\": {\r\n            const id = action.payload;\r\n            const todoData = toggleProperty(state.todoData, id, \"important\");\r\n            Service.updateData(todoData);\r\n            return {\r\n                ...state,\r\n                todoData,\r\n                shownData: todoData\r\n            };\r\n        }\r\n\r\n        case \"TOGGLE_DONE\": {\r\n            const id = action.payload;\r\n            const todoData = toggleProperty(state.todoData, id, \"done\");\r\n            Service.updateData(todoData);\r\n            return {\r\n                ...state,\r\n                todoData,\r\n                shownData: todoData\r\n            };\r\n        }\r\n\r\n        case \"CHANGING_TERM\": {\r\n            const term = action.payload;\r\n            return {\r\n                ...state,\r\n                term\r\n            };\r\n        }\r\n\r\n        case \"SETTING_FILTER\": {\r\n            const filterPrope = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                filterPrope,\r\n                shownData: Filter(\r\n                    search(state.todoData, state.term),\r\n                    filterPrope\r\n                )\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","export default class StorageLoader {\n    key = \"todoData\";\n\n    getTodoList() {\n        if (localStorage.getItem(this.key)) {\n            return JSON.parse(localStorage.getItem(this.key));\n        }\n        localStorage.setItem(this.key, JSON.stringify([]));\n        return [];\n    }\n\n    updateData(newArray) {\n        localStorage.setItem(this.key, JSON.stringify(newArray));\n    }\n}\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\n// store.dispatch(delayedActionCreater(3000))\r\n\r\nexport default store;\r\n","import TodoListItem from './todo-list-item.js';\n\nexport default TodoListItem;","import React from \"react\";\nimport \"./todo-list-item.css\";\n\nconst TodoListItem = (props) => {\n    const {\n        label,\n        onDelete,\n        onToggleDone,\n        onToggleImportant,\n        important,\n        done\n    } = props;\n\n    let className = \"todo-list-item\";\n\n    if (done) {\n        className += \" done\";\n    }\n\n    if (important) {\n        className += \" important\";\n    }\n\n    return (\n        <div className={className}>\n            <button\n                className=\"btn btn-outline-success btn-sm\"\n                onClick={onToggleImportant}\n            >\n                <i className=\"fa fa-exclamation\"></i>\n            </button>\n            <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={onDelete}\n            >\n                <i className=\"fa fa-trash-o\"></i>\n            </button>\n\n            <span className=\"todo-list-item-label\" onClick={onToggleDone}>\n                {label}\n            </span>\n        </div>\n    );\n};\n\nexport default TodoListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { onDeletingItem, onToggleImportant, onToggleDone } from \"../../action\";\n\nimport TodoListItem from \"../todo-list-item\";\nimport \"./todo-list.css\";\n\nconst TodoList = ({\n    todo,\n    onDeletingItem,\n    onToggleImportant,\n    onToggleDone\n}) => {\n    const element = todo.map((item) => {\n        const { id, ...itemProps } = item;\n        return (\n            <li className=\"list-group-item\" key={id}>\n                <TodoListItem\n                    {...itemProps}\n                    onDelete={() => onDeletingItem(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        );\n    });\n\n    if (todo.length === 0) {\n        return (\n            <div className=\"list-empty\">\n                <p>You have nothing to do</p>\n            </div>\n        );\n    }\n\n    return <ul className=\"list-group todo-list\">{element}</ul>;\n};\n\n// const mapStateToProps = ({ todoData }) => {\n//     return { todo: todoData };\n// };\n\nconst mapDispatchToProps = {\n    onDeletingItem,\n    onToggleImportant,\n    onToggleDone\n};\n\nexport default connect(null, mapDispatchToProps)(TodoList);\n","const onAddingItem = (lable) => {\r\n    return {\r\n        type: \"ADDING_ITEM\",\r\n        payload: lable\r\n    };\r\n};\r\n\r\nconst onDeletingItem = (id) => {\r\n    return {\r\n        type: \"DELITING_ITEM\",\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst onToggleImportant = (id) => {\r\n    return {\r\n        type: \"TOGGLE_IMPOTENT\",\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst onToggleDone = (id) => {\r\n    return {\r\n        type: \"TOGGLE_DONE\",\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst onTermChanged = (term) => {\r\n    return {\r\n        type: \"CHANGING_TERM\",\r\n        payload: term\r\n    };\r\n};\r\n\r\nconst setFilter = (filter) => {\r\n    return {\r\n        type: \"SETTING_FILTER\",\r\n        payload: filter\r\n    };\r\n};\r\n\r\nconst onAppSuccess = () => {\r\n    return {\r\n        type: \"COMPONENT_SUCCESS\"\r\n    };\r\n};\r\nexport {\r\n    onAddingItem,\r\n    onDeletingItem,\r\n    onToggleImportant,\r\n    onToggleDone,\r\n    onTermChanged,\r\n    setFilter,\r\n    onAppSuccess\r\n};\r\n","import TodoList from './todo-list.js'\n\nexport default TodoList","import AppHeader from './app-header.js'\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css'\n\nconst AppHeader = ({toDo,done}) => {\n    return (\n        <div className=\"app-header\">\n            <h1 className=\"\">My Todo list</h1>\n            <h4> {toDo} more to do, {done} done</h4>\n        </div>\n    )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel.js';\nexport default SearchPanel;","import React,{Component} from 'react';\nimport './search-panel.css'\n\n\nexport default class SearchPanel extends Component {\n    onChanging = (event) => {\n        let text = event.target.value;\n        this.props.onSearch(text);\n    }\n    render(){\n        \n        return (\n            <input onChange = {this.onChanging} \n                className = 'search-input' placeholder = \"search\" type = \"text\" />\n        )\n    }\n}","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { onAddingItem } from \"../../action\";\n\nimport \"./item-add-form.css\";\n\nconst ItemAddForm = ({ onAdd }) => {\n    const [lable, onLabelChange] = useState(\"\");\n\n    const onSubmiting = (e) => {\n        e.preventDefault();\n\n        let labelCopy = lable;\n        if (labelCopy.trim().length !== 0) {\n            onAdd(labelCopy);\n        }\n        onLabelChange(\"\");\n    };\n\n    const onChange = (e) => {\n        onLabelChange(e.target.value);\n    };\n    return (\n        <div className=\"item-add\">\n            <form onSubmit={onSubmiting} className=\"item-add-form d-flex\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={onChange}\n                    value={lable}\n                />\n                <button className=\"btn btn-outline-secondary\">Add</button>\n            </form>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {\n    onAdd: onAddingItem\n};\n\nexport default connect(null, mapDispatchToProps)(ItemAddForm);\n","import ItemAddForm from './item-add-form';\nexport default ItemAddForm;","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React,{Component} from 'react';\nimport './item-status-filter.css'\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all',label: 'All'},\n        {name: 'active',label: 'Active'},\n        {name: 'done',label: 'Done'},\n    ]\n\n    render() {\n        const {filter} = this.props;\n\n        const buttons = this.buttons.map(({name, label})=>{\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'; \n            return (<button \n                        key = {name}\n                        onClick = {()=>(this.props.setFilter(name))} \n                        className ={`btn ${clazz}`}\n                    >{label}</button>)\n\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n}","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\n// componetns\r\nimport TodoList from \"../todo-list\";\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport { onTermChanged, setFilter, onAppSuccess } from \"../../action\";\r\n// --------------\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.onAppSuccess();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            todoData,\r\n            filterPrope,\r\n            onSearch,\r\n            setFilter,\r\n            shownData\r\n        } = this.props;\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearch={onSearch} />\r\n                    <ItemStatusFilter\r\n                        setFilter={setFilter}\r\n                        filter={filterPrope}\r\n                    />\r\n                </div>\r\n                <TodoList todo={shownData} />\r\n                <ItemAddForm />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ todoData, filterPrope, term, shownData }) => {\r\n    return { todoData, filterPrope, term, shownData };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onSearch: onTermChanged,\r\n    setFilter,\r\n    onAppSuccess\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}